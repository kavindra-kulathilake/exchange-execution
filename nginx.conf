# Define the user and number of worker processes
user nginx;
worker_processes 1;

# The events block
events {
    worker_connections 1024;
}

http {
    # Upstream for load balancing frontend web servers
    upstream frontend_servers {
        server exchange-web:3000;
    }

    # Upstream for load balancing backend API servers
    upstream backend_servers {
        server exchange:4000;
    }

    server {
        # Listen on port 8080 (HTTP)
        listen 80;
        server_name app.sprintly-exchange.com;

        # Location block for the frontend (React app)
        location / {
            proxy_pass http://frontend_servers;  # Load balance requests to web servers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
	    add_header 'Access-Control-Allow-Origin' '*';
        }

        # Location block for the backend API
        location /api/ {
            proxy_pass http://backend_servers;  # Load balance requests to backend API servers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
	    add_header 'Access-Control-Allow-Origin' '*';

            # Optional: Increase timeouts if necessary
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;
        }

        # Optional: Location block for WebSocket connections (if used by your backend)
        location /ws/ {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}

